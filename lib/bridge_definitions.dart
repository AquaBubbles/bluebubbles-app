// AUTO GENERATED FILE, DO NOT EDIT.
// Generated by `flutter_rust_bridge`@ 1.75.3.
// ignore_for_file: non_constant_identifier_names, unused_element, duplicate_ignore, directives_ordering, curly_braces_in_flow_control_structures, unnecessary_lambdas, slash_for_doc_comments, prefer_const_literals_to_create_immutables, implicit_dynamic_list_literal, duplicate_import, unused_import, unnecessary_import, prefer_single_quotes, prefer_const_constructors, use_super_parameters, always_use_package_imports, annotate_overrides, invalid_use_of_protected_member, constant_identifier_names, invalid_use_of_internal_member, prefer_is_empty, unnecessary_const

import 'dart:convert';
import 'dart:async';
import 'package:meta/meta.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge.dart';
import 'package:uuid/uuid.dart';

abstract class NativeLib {
  Future<PushState> newPushState({dynamic hint});

  FlutterRustBridgeTaskConstMeta get kNewPushStateConstMeta;

  Future<List<String>> getHandles({required PushState state, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kGetHandlesConstMeta;

  Future<List<String>> validateTargets(
      {required PushState state, required List<String> targets, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kValidateTargetsConstMeta;

  Future<void> cancelRegistration({required PushState state, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kCancelRegistrationConstMeta;

  Future<int> getPhase({required PushState state, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kGetPhaseConstMeta;

  Future<void> restore(
      {required PushState currState, required String data, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kRestoreConstMeta;

  Future<void> newPush({required PushState state, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kNewPushConstMeta;

  Future<int> tryAuth(
      {required PushState state,
      required String username,
      required String password,
      dynamic hint});

  FlutterRustBridgeTaskConstMeta get kTryAuthConstMeta;

  Future<int> registerIds(
      {required PushState state, required String validationData, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kRegisterIdsConstMeta;

  Future<String> savePush({required PushState state, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kSavePushConstMeta;

  DropFnType get dropOpaquePushState;
  ShareFnType get shareOpaquePushState;
  OpaqueTypeFinalizer get PushStateFinalizer;
}

@sealed
class PushState extends FrbOpaque {
  final NativeLib bridge;
  PushState.fromRaw(int ptr, int size, this.bridge) : super.unsafe(ptr, size);
  @override
  DropFnType get dropFn => bridge.dropOpaquePushState;

  @override
  ShareFnType get shareFn => bridge.shareOpaquePushState;

  @override
  OpaqueTypeFinalizer get staticFinalizer => bridge.PushStateFinalizer;
}
